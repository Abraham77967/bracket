"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),b=a,f=p["".concat(c,".").concat(b)]||p[b]||u[b]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Installation",l={unversionedId:"getting-started/installation",id:"getting-started/installation",title:"Installation",description:"Database",source:"@site/docs/getting-started/installation.md",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/bracket/docs/getting-started/installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/bracket/docs/category/getting-started"},next:{title:"Configuration",permalink:"/bracket/docs/getting-started/configuration"}},c={},s=[{value:"Database",id:"database",level:2},{value:"Running the frontend and backend",id:"running-the-frontend-and-backend",level:2},{value:"Frontend",id:"frontend",level:3},{value:"Backend",id:"backend",level:3}],d={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("h2",{id:"database"},"Database"),(0,a.kt)("p",null,"First create a ",(0,a.kt)("inlineCode",{parentName:"p"},"bracket")," cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo pg_createcluster -u postgres -p 5532 13 bracket\npg_ctlcluster 13 bracket start\n")),(0,a.kt)("p",null,"Subsequently, create a new ",(0,a.kt)("inlineCode",{parentName:"p"},"bracket_dev")," database:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -Hu postgres psql  -p 5532\nCREATE USER bracket_dev WITH PASSWORD 'bracket_dev';\nCREATE DATABASE bracket_dev OWNER bracket_dev;\n")),(0,a.kt)("p",null,"You can do the same but replace the user and database name with:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bracket_ci"),": for running tests"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bracket_prod"),": for a production database")),(0,a.kt)("p",null,"The database URL can be specified per environment in the ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," files (see ",(0,a.kt)("a",{parentName:"p",href:"#config"},"config"),")."),(0,a.kt)("h2",{id:"running-the-frontend-and-backend"},"Running the frontend and backend"),(0,a.kt)("p",null,"The following starts the frontend and backend for local development:"),(0,a.kt)("h3",{id:"frontend"},"Frontend"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd frontend\nyarn\nnpm run dev\n")),(0,a.kt)("h3",{id:"backend"},"Backend"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd backend\npipenv install -d\npipenv shell\n./run.sh\n")))}u.isMDXComponent=!0}}]);